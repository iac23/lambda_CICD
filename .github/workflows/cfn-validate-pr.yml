name: Validate CloudFormation on my PR

on:
  pull_request:
    paths:
      - 'cloudformation/**'
    types:
      - opened  # Will trigger when new pull is created
      - synchronize # Trigger when pull is updated
      - reopened  # Trigger when closed pull is reopened
      - closed  # Trigger when pull is closed (cleanup only)

permissions:
  pull-requests: write
  contents: read

# Skip deployment if pull is closed
jobs:
  validate-cfn:
    if: github.event.action != 'closed'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Validate Cloudformation template
        run: |
          aws cloudformation validate-template --template-body file://cloudformation/s3-bucket.yml

      - name: Deploy our stack
        run: |
          stack_name="pullrq-test-stack-${{github.event.pull_request.number}}"
          aws cloudformation create-stack --stack-name $stack_name --template-body file://cloudformation/s3-bucket.yml --parameters ParameterKey=Environment,ParameterValue=test
        continue-on-error: false  # Ensures errors prevent further steps from running

      - name: Comment on the PR
        if: success()
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'Cloudformation test stack deployed. Stack name: pullrq-test-stack-${{ github.event.pull_request.number}}'
                        })
  cleanup-on-merge:
    runs-on: ubuntu-latest
    if: github.event.action == 'closed' && github.event.pull_request.merged == true
    steps:
      - name: configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Delete Test Stack
        run: |
                stack_name='pullrq-test-stack-${{ github.event.pull_request.number }}'
                echo "Deleting stack: $stack_name"
                aws cloudformation delete-stack --stack-name $stack_name
                